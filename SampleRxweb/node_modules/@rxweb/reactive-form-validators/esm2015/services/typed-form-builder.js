import { FormBuilder } from "@angular/forms";
import { RxFormBuilder } from "./rx-form-builder";
import { FUNCTION_STRING } from "../const/app.const";
import { Injectable } from "@angular/core";
export class TypedFormBuilder {
    constructor() {
        this.formBuilder = new FormBuilder();
        this.rxFormBuilder = new RxFormBuilder();
    }
    group(controlsConfig, options) {
        let paramOptions = options || {};
        if (typeof controlsConfig == FUNCTION_STRING)
            return !(paramOptions && paramOptions.isInstance) ? this.rxFormBuilder.formGroup(controlsConfig, paramOptions.data, paramOptions.config) : this.rxFormBuilder.formGroup(controlsConfig, paramOptions.data, paramOptions.config).modelInstance;
        return this.formBuilder.group(controlsConfig, options);
    }
}
TypedFormBuilder.decorators = [
    { type: Injectable }
];
TypedFormBuilder.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZWQtZm9ybS1idWlsZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvcmVhY3RpdmUtZm9ybS12YWxpZGF0b3JzL3NlcnZpY2VzL3R5cGVkLWZvcm0tYnVpbGRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsV0FBVyxFQUFxQyxNQUFNLGdCQUFnQixDQUFDO0FBQ2hGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUE7QUFJcEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxNQUFNLE9BQU8sZ0JBQWdCO0lBR3pCO1FBQ0ksSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO1FBQ3JDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxhQUFhLEVBQUUsQ0FBQztJQUM3QyxDQUFDO0lBRUQsS0FBSyxDQUFJLGNBRVIsRUFBRSxPQUVLO1FBQ0osSUFBSSxZQUFZLEdBQVksT0FBTyxJQUFTLEVBQUUsQ0FBQztRQUMvQyxJQUFJLE9BQU8sY0FBYyxJQUFJLGVBQWU7WUFDeEMsT0FBTyxDQUFDLENBQUMsWUFBWSxJQUFJLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsY0FBYyxFQUFFLFlBQVksQ0FBQyxJQUFJLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBa0IsQ0FBQyxDQUFDLENBQWUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsY0FBYyxFQUFFLFlBQVksQ0FBQyxJQUFJLEVBQUUsWUFBWSxDQUFDLE1BQU0sQ0FBRSxDQUFDLGFBQWtCLENBQUM7UUFDdlIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxjQUFjLEVBQUMsT0FBTyxDQUFDLENBQUM7SUFDMUQsQ0FBQzs7O1lBbEJKLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb3JtQnVpbGRlciwgRm9ybUdyb3VwLCBBYnN0cmFjdENvbnRyb2xPcHRpb25zIH0gZnJvbSBcIkBhbmd1bGFyL2Zvcm1zXCI7XHJcbmltcG9ydCB7IFJ4Rm9ybUJ1aWxkZXIgfSBmcm9tIFwiLi9yeC1mb3JtLWJ1aWxkZXJcIjtcclxuaW1wb3J0IHsgRlVOQ1RJT05fU1RSSU5HIH0gZnJvbSBcIi4uL2NvbnN0L2FwcC5jb25zdFwiXHJcbmltcG9ydCB7IE9wdGlvbnMgfSBmcm9tIFwiLi4vbW9kZWxzL2ludGVyZmFjZS9vcHRpb25zXCJcclxuaW1wb3J0IHsgUnhGb3JtR3JvdXAgfSBmcm9tIFwiLi9yeC1mb3JtLWdyb3VwXCI7XHJcbmltcG9ydCB7IElGb3JtR3JvdXAgfSBmcm9tIFwiLi4vbW9kZWxzL2ludGVyZmFjZS9pLWZvcm0tZ3JvdXBcIjtcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVHlwZWRGb3JtQnVpbGRlciB7XHJcbiAgICBwcml2YXRlIGZvcm1CdWlsZGVyOiBGb3JtQnVpbGRlcjtcclxuICAgIHByaXZhdGUgcnhGb3JtQnVpbGRlcjogUnhGb3JtQnVpbGRlcjtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuZm9ybUJ1aWxkZXIgPSBuZXcgRm9ybUJ1aWxkZXIoKTtcclxuICAgICAgICB0aGlzLnJ4Rm9ybUJ1aWxkZXIgPSBuZXcgUnhGb3JtQnVpbGRlcigpO1xyXG4gICAgfVxyXG5cclxuICAgIGdyb3VwPFQ+KGNvbnRyb2xzQ29uZmlnOiB7XHJcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xyXG4gICAgfSwgb3B0aW9ucz86IEFic3RyYWN0Q29udHJvbE9wdGlvbnMgfCB7XHJcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xyXG4gICAgfSB8IG51bGwpOiBGb3JtR3JvdXAgfCBUIHtcclxuICAgICAgICBsZXQgcGFyYW1PcHRpb25zID0gPE9wdGlvbnM+b3B0aW9ucyB8fCA8YW55Pnt9O1xyXG4gICAgICAgIGlmICh0eXBlb2YgY29udHJvbHNDb25maWcgPT0gRlVOQ1RJT05fU1RSSU5HKVxyXG4gICAgICAgICAgICByZXR1cm4gIShwYXJhbU9wdGlvbnMgJiYgcGFyYW1PcHRpb25zLmlzSW5zdGFuY2UpID8gdGhpcy5yeEZvcm1CdWlsZGVyLmZvcm1Hcm91cChjb250cm9sc0NvbmZpZywgcGFyYW1PcHRpb25zLmRhdGEsIHBhcmFtT3B0aW9ucy5jb25maWcpIGFzIElGb3JtR3JvdXA8VD4gOiAoPFJ4Rm9ybUdyb3VwPnRoaXMucnhGb3JtQnVpbGRlci5mb3JtR3JvdXAoY29udHJvbHNDb25maWcsIHBhcmFtT3B0aW9ucy5kYXRhLCBwYXJhbU9wdGlvbnMuY29uZmlnKSkubW9kZWxJbnN0YW5jZSBhcyBUO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmZvcm1CdWlsZGVyLmdyb3VwKGNvbnRyb2xzQ29uZmlnLG9wdGlvbnMpO1xyXG4gICAgfVxyXG59Il19